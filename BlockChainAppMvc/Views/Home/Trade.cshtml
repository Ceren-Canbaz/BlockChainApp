@model BlockChainAppMvc.ViewModels.CoinWalletModel
@using Microsoft.AspNetCore.Http
@inject Microsoft.AspNetCore.Http.IHttpContextAccessor HttpContextAccessor

@{
    var coins = Model;
    ViewBag.Title = "Trade";
    if (HttpContextAccessor.HttpContext.Session.GetString("token") != null)
    {
        Layout = "~/Views/Shared/_LayoutLogin.cshtml";
    }
    else
    {
        Layout = "~/Views/Shared/_Layout.cshtml";
    }
}

<div class="container">
    
    <button style="cursor:default; margin-top:2rem;" class="btn btn-warning"> CÜZDAN:  @coins.Wallets.balance</button>
        
            <div class="card" style="margin-top:4rem;">
                <div class="card-body">
                    <h5 class="card-title">SATIN AL</h5>
                    <p class="card-text">Almak istediğiniz coini ve miktarını seçiniz.</p>
                    <div class="input-group">

                        <form action="/coinAmountBuy" method="POST">

                            <select data-val="true" data-val-range="A user type must be selected." data-val-range-max="2" data-val-range-min="1" data-val-required="The UserType field is required." id="UserType" name="coinId" class="input-validation-error">
                                @foreach (var coin in coins.Coins)
                                {
                                    // Coin, coinAmount coin

                                    <option value="@coin.coinId"> @coin.coinName @*@Html.DisplayNameFor(model => model.coinName)*@</option>
                                }

                            </select>

                            <input  value ="" type="number" name="amount" />
                            <input type="submit" value="BUY" class="btn btn-outline-secondary" />

                        </form>
                    </div>
                </div>
            </div>
       
      
            <div class="card" style="margin-top:3rem;">
                <div class="card-body">
                    <h5 class="card-title">SAT</h5>
                    <p class="card-text">Satmak istediğiniz coini ve miktarını seçiniz.</p>
                    <div class="input-group">
                        <form action="/CoinAmountSell" method="POST">

                            <select data-val="true" data-val-range="A user type must be selected." data-val-range-max="2" data-val-range-min="1" data-val-required="The UserType field is required." id="UserType" name="coinId" class="input-validation-error">
                                @foreach (var coin in coins.Coins)
                                {
                                    // Coin, coinAmount coin

                                    <option value="@coin.coinId"> @coin.coinName @*@Html.DisplayNameFor(model => model.coinName)*@</option>
                                }

                            </select>


                            
                            <input  type="number" value="amount" />

                            <input type="submit" value="SELL" class="btn btn-outline-secondary" />

                        </form>
                    </div>
                </div>
            </div>
       
  


    <br />
    <br />
    <br />
    <br />


</div>